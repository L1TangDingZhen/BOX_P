# # nginx配置文件 (nginx.conf)
# worker_processes 1;

# events {
#     worker_connections 1024;
# }

# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;
#     sendfile        on;
#     keepalive_timeout  65;

#     # 启用gzip压缩
#     gzip on;
#     gzip_disable "msie6";
#     gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

#     # 前端服务
#     server {
#         listen 80;
#         server_name localhost;


#         listen 443 ssl;
#         server_name aimls.uk www.aimls.uk;
        
#         ssl_certificate /etc/ssl/cloudflare/cert.pem;
#         ssl_certificate_key /etc/ssl/cloudflare/key.pem;
        
#         # 前端静态文件
#         location / {
#             root   /usr/share/nginx/html;
#             index  index.html index.htm;
#             try_files $uri $uri/ /index.html; # React路由支持
#         }

#         # 后端API代理
#         location /api/ {
#             proxy_pass http://backend:8000/api/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
            
#             # 添加这些处理CORS预检请求
#             add_header 'Access-Control-Allow-Origin' '*';
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
#             add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            
#             # 处理预检请求
#             if ($request_method = 'OPTIONS') {
#                 add_header 'Access-Control-Allow-Origin' '*';
#                 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
#                 add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
#                 add_header 'Access-Control-Max-Age' 1728000;
#                 add_header 'Content-Type' 'text/plain; charset=utf-8';
#                 add_header 'Content-Length' 0;
#                 return 204;
#             }
#         }
        
#         # Swagger文档
#         location /swagger/ {
#             proxy_pass http://backend:8000/swagger/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#         }
        
#         # 静态错误页面
#         error_page   500 502 503 504  /50x.html;
#         location = /50x.html {
#             root   /usr/share/nginx/html;
#         }
#     }
# }




# nginx配置文件 (nginx.conf)
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # 增强日志格式，包含请求体和响应
    log_format debug_format '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           'req_body: "$request_body" '
                           'resp_body: "$resp_body"';

    # 启用gzip压缩
    gzip on;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # HTTP和HTTPS共用服务器配置
    server {
        listen 80;
        listen 443 ssl;
        server_name aimls.uk www.aimls.uk;
        
        ssl_certificate /etc/letsencrypt/live/aimls.uk/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/aimls.uk/privkey.pem;
        
        # 调试设置
        error_log /var/log/nginx/error.log debug;
        access_log /var/log/nginx/access.log debug_format;
        
        # 前端静态文件
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # 后端API代理
        location /api/ {
            # 记录请求体
            client_body_buffer_size 16k;
            client_max_body_size 16k;
            
            # 记录响应体 (调试用)
            proxy_pass http://backend:8000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type "application/json";
            
            # CORS设置
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
        
        # Swagger文档
        location /swagger/ {
            proxy_pass http://backend:8000/swagger/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}
EOL

# 重启Nginx
# docker-compose down
# docker-compose up -d