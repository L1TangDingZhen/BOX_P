# nginx配置文件 (nginx.conf)
# worker_processes 1;

# events {
#     worker_connections 1024;
# }

# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;
#     sendfile        on;
#     keepalive_timeout  65;

#     # 启用gzip压缩
#     gzip on;
#     gzip_disable "msie6";
#     gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/x-font-ttf application/vnd.ms-fontobject image/svg+xml;

#     # HTTP和HTTPS共用服务器配置
#     server {
#         listen 80;
#         listen 443 ssl;
#         server_name aimls.uk www.aimls.uk;


#         ssl_certificate /etc/letsencrypt/live/aimls.uk/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/aimls.uk/privkey.pem;

#         # 前端静态文件
#         location / {
#             root   /usr/share/nginx/html;
#             index  index.html index.htm;
#             try_files $uri $uri/ /index.html;
#         }

#         # 后端API代理
#         location /api/ {
#             proxy_pass http://backend:8000/api/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;

#             # CORS设置
#             add_header 'Access-Control-Allow-Origin' '*' always;
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
#             add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

#             if ($request_method = 'OPTIONS') {
#                 add_header 'Access-Control-Allow-Origin' '*' always;
#                 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
#                 add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
#                 add_header 'Access-Control-Max-Age' 1728000;
#                 add_header 'Content-Type' 'text/plain; charset=utf-8';
#                 add_header 'Content-Length' 0;
#                 return 204;
#             }
#         }

#         # # Swagger文档
#         # location /swagger/ {
#         #     proxy_pass http://backend:8000/swagger/;
#         #     proxy_set_header Host $host;
#         #     proxy_set_header X-Real-IP $remote_addr;
#         # }

#         # 其他静态文件
#         location /swagger/ {
#             proxy_pass http://backend:8000/swagger/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
            
#             # 添加这些头部以允许跨域请求
#             add_header 'Access-Control-Allow-Origin' '*' always;
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#             add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
#         }

#         # 添加这一条以处理swagger.json请求
#         location ~ ^/swagger\.(json|yaml)$ {
#             proxy_pass http://backend:8000$request_uri;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }



# worker_processes 1;

# events {
#     worker_connections 1024;
# }

# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;
#     sendfile        on;
#     keepalive_timeout  65;

#     # 启用gzip压缩
#     gzip on;
#     gzip_disable "msie6";
#     gzip_types text/plain text/css application/json application/javascript text/xml application/xml applicati

#     # HTTP配置 - 重定向到HTTPS
#     server {
#         listen 80;
#         server_name aimls.uk www.aimls.uk;

#         # 重定向到HTTPS
#         return 301 https://$host$request_uri;
#     }

#     # HTTPS配置
#     server {
#         listen 443 ssl;
#         server_name aimls.uk www.aimls.uk;

#         # SSL证书配置
#         ssl_certificate /etc/letsencrypt/live/aimls.uk/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/aimls.uk/privkey.pem;

#         # 安全相关配置
#         ssl_protocols TLSv1.2 TLSv1.3;
#         ssl_prefer_server_ciphers on;
#         ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

#         # 前端文件
#         location / {
#             root /usr/share/nginx/html;
#             index index.html index.htm;
#             try_files $uri $uri/ /index.html;  # 支持React路由
#         }

#         # API 代理配置
#         location /api/ {
#             proxy_pass http://backend:8000;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#             proxy_hide_header WWW-Authenticate;

#             # CORS配置
#             add_header 'Access-Control-Allow-Origin' '*' always;
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
#             add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cach

#             # 处理OPTIONS请求
#             if ($request_method = 'OPTIONS') {
#                 add_header 'Access-Control-Allow-Origin' '*';
#                 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
#                 add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,
#                 add_header 'Access-Control-Max-Age' 1728000;
#                 add_header 'Content-Type' 'text/plain; charset=utf-8';
#                 add_header 'Content-Length' 0;
#                 return 204;
#             }
#         }
#         # Swagger配置
#         location ~ ^/swagger\.(json|yaml)$ {
#             proxy_pass http://backend:8000;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#         }

#         location /swagger/ {
#             proxy_pass http://backend:8000;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#         }

#         location /redoc/ {
#             proxy_pass http://backend:8000;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#         }
#     }
# }




worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # 启用gzip压缩
    gzip on;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # HTTP配置 - 重定向到HTTPS
    server {
        listen 80;
        server_name aimls.uk www.aimls.uk;

        # 重定向到HTTPS
        return 301 https://$host$request_uri;
    }

    # HTTPS配置
    server {
        listen 443 ssl;
        server_name aimls.uk www.aimls.uk;

        # SSL证书配置
        ssl_certificate /etc/letsencrypt/live/aimls.uk/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/aimls.uk/privkey.pem;
        
        # 安全相关配置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        
        # 重要：前端React应用的静态文件
        location /static/js/ {
            alias /usr/share/nginx/html/static/js/;
        }
        
        location /static/css/ {
            alias /usr/share/nginx/html/static/css/;
        }
        
        location /static/media/ {
            alias /usr/share/nginx/html/static/media/;
        }
        
        # 前端文件
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;  # 支持React路由
        }

        # 后端的静态文件 - 专门用于Swagger
        location /static/drf-yasg/ {
            proxy_pass http://backend:8000/static/drf-yasg/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # API 代理配置
        location /api/ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_hide_header WWW-Authenticate;
            
            # CORS配置
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
            
            # 处理OPTIONS请求
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # Swagger配置
        location /swagger/ {
            proxy_pass http://backend:8000/swagger/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 处理swagger.json或swagger.yaml请求
        location ~ ^/swagger\.(json|yaml)$ {
            proxy_pass http://backend:8000$request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /redoc/ {
            proxy_pass http://backend:8000/redoc/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}